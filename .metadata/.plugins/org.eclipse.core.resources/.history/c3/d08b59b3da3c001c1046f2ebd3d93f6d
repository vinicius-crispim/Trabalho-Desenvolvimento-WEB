package com.tabalhoweb.facade.facadeproduto;

import java.util.List;
import java.util.Optional;

import javax.persistence.EntityNotFoundException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.EmptyResultDataAccessException;

import com.tabalhoweb.facade.entities.Categoria;
import com.tabalhoweb.facade.services.CategoriaService;
import com.tabalhoweb.facade.services.ProdutoService;
import com.tabalhoweb.facade.services.exceptions.DatabaseException;
import com.tabalhoweb.facade.services.exceptions.ResourceNotFoundException;

public class ProdutoFacade {

	@Autowired
	private CategoriaService cateservice;

	@Autowired
	private ProdutoService prodservice;

	// inicio Categoria

	public List<Categoria> findAll() {
		return cateservice.findAll();
	}

	public Categoria findById(Long id) {
		return cateservice.findById(id);

	}

	public Categoria saveCategoria(Categoria categoria) {
		return repository.save(categoria);
	}

	public void deleteCategoria(Long id) {
		try {
			repository.deleteById(id);
		} catch (EmptyResultDataAccessException e) {
			throw new ResourceNotFoundException(id);
		} catch (DataIntegrityViolationException e) {
			throw new DatabaseException(e.getMessage());
		}
	}

	// getOne apenas pega o objeto monitorado e depois mexe no banco, o findBy pega
	// no banco
	public Categoria updateCategoria(Long id, Categoria categoria) {
		try {
			Categoria obj = repository.getOne(id);
			updateData(obj, categoria);
			return repository.save(obj);
		} catch (EntityNotFoundException e) {
			throw new ResourceNotFoundException(id);
		}
	}

	// fim Categoria

}
